{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Docs","text":""},{"location":"#abstract","title":"abstract","text":"<p>Within this section you can find some more detailed doumentation.</p> <pre><code>flowchart LR\n    github_source(\"fa:fa-github &lt;b&gt;GitHub&lt;/b&gt; source repository &lt;b&gt;[private|public]&lt;/b&gt;\")\n    gitlab_source(\"fa:fa-gitlab &lt;b&gt;GitLab&lt;/b&gt; source repository &lt;b&gt;[private|public]&lt;/b&gt;\")\n    any_source(\"fa:fa-git &lt;b&gt;Any&lt;/b&gt; git provider &lt;b&gt;[private|public]&lt;/b&gt;\")\n    github_target{{\"fa:fa-github &lt;b&gt;GitHub&lt;/b&gt; target repository &lt;b&gt;[private|public]&lt;/b&gt;\"}}\n    github_source --&gt; |\"&lt;b&gt;ssh | PAT | github app&lt;/b&gt;\"| github_target\n    gitlab_source --&gt; |\"&lt;b&gt;ssh&lt;/b&gt;\"| github_target\n    any_source --&gt; |\"&lt;b&gt;ssh&lt;/b&gt;\"| github_target</code></pre> <ul> <li>architecture</li> <li>how to use the docker images</li> </ul>"},{"location":"ARCHITECTURE/","title":"Architecture","text":""},{"location":"ARCHITECTURE/#abstract","title":"abstract","text":"<p>within this section you will find some information about the code flow</p>"},{"location":"ARCHITECTURE/#code","title":"Code","text":"<p>The architecture and logic within the code:</p> <pre><code>flowchart TD\nExit[Exit]\nStart[Start]\nGitHubActionEnv{\"fa:fa-github Read GitHubAction env\"}\n\nstyle Start fill:#f9f,stroke:#333,stroke-width:4px\nstyle Exit fill:#bbf,stroke:#f66,stroke-width:2px,color:#fff,stroke-dasharray: 5 5\n\nEnvCheckEntry{Required environment variables exists}\nSshCheckEntry{SSH private key defined}\nSshConfigureEntry[Configure ssh related variables]\nGitConfigureEntry[Configure git global settings]\n\nEnvCheckSync{Required environment variables exists}\nSshConfigureSync[Eventually configure SSH variables]\nSetVariablesSync[Set the needed variables, e.q. with reading remote repository]\nCheckCommitLocalExistent{\"Check if source commit hash is present in target repo\"}\nGitCheckoutSync[\"fa:fa-code-branch Create git branch &lt;branch_prefix_git_hash&gt;\"]\nGitPullSync[\"Pull from remote repository\"]\nCheckIgnoreFileExistsSync{\"Check if .templatesyncignore file exists\\n(First inside .github folder, then in root)\"}\nResetChangesSync[\"Reset the changes listed within the ignore file\"]\nGitCommitSync[\"fa:fa-code-commit Commit the changes\"]\n\nCheckIsDryRun{\"Check if is_dry_run is set to true\"}\nGitPushSync[\"Push the changes to GitHub\"]\nGitPullRequestSync[\"fa:fa-code-pull-request Create a pull request on GitHub\"]\nHook{{\"hooks, &lt;b&gt;prepull | precommit | prepush | prepr&lt;/b&gt;\"}}\n\nsubgraph githubactions[\"fa:fa-github GitHubActions\"]\n\nStart --&gt; GitHubActionEnv\nGitHubActionEnv --&gt;|issues| Exit\n\n\nend\n\nsubgraph entry[\"entrypoint.sh\"]\n\nGitHubActionEnv --&gt;|all fine| EnvCheckEntry\nEnvCheckEntry --&gt;|do not exist| Exit\nEnvCheckEntry --&gt;|exist| SshCheckEntry\n\nSshCheckEntry --&gt;|is defined| SshConfigureEntry\nSshCheckEntry --&gt;|is not defined| GitConfigureEntry\nSshConfigureEntry --&gt; GitConfigureEntry\n\nend\n\n\nsubgraph sync[\"sync_template.sh\"]\nGitConfigureEntry --&gt; EnvCheckSync\n\nEnvCheckSync --&gt;|do not exist| Exit\nEnvCheckSync --&gt;|do exist| SshConfigureSync\nSshConfigureSync --&gt; SetVariablesSync\n\nsubgraph compareVersion[\"Compare the sync version\"]\nSetVariablesSync --&gt; CheckCommitLocalExistent\nCheckCommitLocalExistent --&gt;|commit hash already in target history| Exit\nend\n\nsubgraph git[\"Git Actions\"]\nCheckCommitLocalExistent --&gt;|commit hash not in target history| GitCheckoutSync\nGitCheckoutSync --&gt; GitPullSync\nGitPullSync --&gt; CheckIgnoreFileExistsSync\nCheckIgnoreFileExistsSync --&gt;|does not exist| GitCommitSync\nCheckIgnoreFileExistsSync --&gt;|exists| ResetChangesSync\nResetChangesSync --&gt; GitCommitSync\nend\n\nsubgraph github[\"GitHub Actions\"]\nGitCommitSync --&gt; CheckIsDryRun\nCheckIsDryRun --&gt;|is true| Exit\nCheckIsDryRun --&gt;|is not true| GitPushSync\nGitPushSync --&gt; GitPullRequestSync\nGitPullRequestSync --&gt; Exit\n\nend\n\nend\n</code></pre>"},{"location":"DOCKER/","title":"DOCKER","text":""},{"location":"DOCKER/#abstract","title":"abstract","text":"<p>If you want to test things out or if you want to build your own action (e.g. in on prem environments) you are able to use docker images.</p> <ul> <li>github registry</li> <li>dockerhub registry</li> </ul>"},{"location":"DOCKER/#use-the-image","title":"Use the image","text":"<p>TODO</p>"}]}